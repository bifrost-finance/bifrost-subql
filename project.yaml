specVersion: 1.0.0
name: bifrost-subql
version: 1.0.0
runner:
  node:
    name: "@subql/node"
    version: "*"
  query:
    name: "@subql/query"
    version: "*"
description: This SubQuery project can be use as a starting point for bifrost network
repository: "https://github.com/bifrost-finance/bifrost-subql.git"
schema:
  file: ./schema.graphql
network:
  chainId: "0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"
  endpoint: "wss://hk.p.bifrost-rpc.liebi.com/ws"
  chaintypes:
    file: ./dist/chaintypes.js
dataSources:
  - kind: substrate/Runtime
    startBlock: 635000
    mapping:
      file: ./dist/index.js
      handlers:
        - handler: vtokenMinting
          kind: substrate/BlockHandler
        - handler: handleFarmingApy
          kind: substrate/BlockHandler
        - handler: handleVtokenMintingMinted
          kind: substrate/EventHandler
          filter:
            module: vtokenMinting
            method: Minted
        - handler: handleVtokenMintingRedeemed
          kind: substrate/EventHandler
          filter:
            module: vtokenMinting
            method: Redeemed
        - handler: handleVtokenMintingRebondedByUnlockId
          kind: substrate/EventHandler
          filter:
            module: vtokenMinting
            method: RebondedByUnlockId
        - handler: handleVDOTSwap
          kind: substrate/EventHandler
          filter:
            module: zenlinkProtocol
            method: AssetSwap
        - handler: handleVGLMRSwap
          kind: substrate/EventHandler
          filter:
            module: zenlinkProtocol
            method: AssetSwap
        - handler: handleCurrenciesTransferred
          kind: substrate/CallHandler
          filter:
            module: currencies
            method: transfer
            success: true
        - handler: handleCurrenciesTransferred
          kind: substrate/CallHandler
          filter:
            module: tokens
            method: transfer
            success: true
        - handler: handleVtokenRedeemedSuccess
          kind: substrate/EventHandler
          filter:
            module: vtokenMinting
            method: RedeemSuccess
        - handler: handleVtokenLiquidity
          kind: substrate/EventHandler
          filter:
            module: zenlinkProtocol
            method: LiquidityAdded
        - handler: handleVtokenLiquidity
          kind: substrate/EventHandler
          filter:
            module: zenlinkProtocol
            method: LiquidityRemoved
        - handler: handleSlp
          kind: substrate/BlockHandler