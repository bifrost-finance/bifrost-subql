specVersion: 0.0.1
description: ''
repository: 'git@github.com:bifrost-finance/bifrost-subql.git'
schema: ./schema.graphql
network:
  endpoint: 'wss://asgard-rpc.liebi.com/ws'
  # endpoint: 'ws://10.115.26.113:9988'
  typesBundle: {
    spec: {
      chainname: {
        rpc: {
    getAllPairs: {
        description: 'Get the information of all the exchange pairs.',
        params: [{
            name: 'at',
            type: 'BlockHash',
            isHistoric: true,
            isOptional: true
        }],
        type: 'Vec<PairInfo>'
    }
}
      }
    }
  }
  types: {
  "TokenSymbol": {
    "_enum": {
      "ASG": 0,
      "aUSD": 2,
      "DOT": 3,
      "KSM": 4,
      "ETH": 5
    }
  },
  "CurrencyId": {
    "_enum": {
      "Token": "TokenSymbol",
      "VToken": "TokenSymbol",
      "Native": "TokenSymbol",
      "Stable": "TokenSymbol",
      "VSToken": "TokenSymbol",
      "VSBond": "(TokenSymbol, ParaId, LeasePeriod, LeasePeriod)"
    }
  },
  "CurrencyIdOf": "CurrencyId",
  "TAssetBalance": "Balance",
  "AccountData": {
    "free": "Balance",
    "reserved": "Balance",
    "frozen": "Balance"
  },
  "PalletBalanceOf": "Balance",
  "BlockNumberFor": "BlockNumber",
  "NumberOrHex": {
    "_enum": {
      "Number": "u64",
      "Hex": "U256"
    }
  },
  "IsExtended": "bool",
  "SystemPalletId": "PalletId",
  "RewardRecord": {
    "account_id": "AccountId",
    "record_amount": "Balance"
  },
  "MaxLocksOf": "u32",
  "VestingInfo": {
    "locked": "Balance",
    "per_block": "Balance",
    "starting_block": "BlockNumber"
  },
  "OrderId": "u64",
  "OrderInfo": {
    "owner": "AccountIdOf",
    "currency_sold": "CurrencyIdOf",
    "amount_sold": "BalanceOf",
    "currency_expected": "CurrencyIdOf",
    "amount_expected": "BalanceOf",
    "order_id": "OrderId",
    "order_state": "OrderState"
  },
  "OrderState": {
    "_enum": [
      "InTrade",
      "Revoked",
      "Clinchd"
    ]
  },
  "AssetId": {
    "chain_id": "u32",
    "asset_type": "u8",
    "asset_index": "u32"
  },
  "AssetBalance": "u128",
  "PairInfo": {
    "asset_0": "AssetId",
    "asset_1": "AssetId",
    "account": "AccountId",
    "total_liquidity": "AssetBalance",
    "holding_liquidity": "AssetBalance",
    "reserve_0": "AssetBalance",
    "reserve_1": "AssetBalance",
    "lp_asset_id": "AssetId"
  }
}
dataSources:
  - name: main
    kind: substrate/Runtime
    startBlock: 1
    mapping:
      handlers:
        # - handler: handleBlock
        #   kind: substrate/BlockHandler
        # - handler: handleEvent
        #   kind: substrate/EventHandler
        #   filter:
        #     module: balances
        #     method: Deposit
        # - handler: handleCall
        #   kind: substrate/CallHandler
        # mappingVtokenPool.ts:
        - handler: vtokenPoolBlock
          kind: substrate/BlockHandler
        - handler: assetsTransferredEvent
          kind: substrate/EventHandler
          filter:
            module: currencies
            method: Transferred
        - handler: assetsIssuedEvent
          kind: substrate/EventHandler
          filter:
            module: brmlAssets
            method: Issued
        - handler: assetsBurnedEvent
          kind: substrate/EventHandler
          filter:
            module: brmlAssets
            method: Burned
        - handler: assetsBlock
          kind: substrate/BlockHandler
        - handler: vtokenMintMintedEvent
          kind: substrate/EventHandler
          filter:
            module: vtokenMint
            method: Minted
        - handler: vtokenMintRedeemStartedEvent
          kind: substrate/EventHandler
          filter:
            module: vtokenMint
            method: RedeemStarted
        - handler: aprBlock
          kind: substrate/BlockHandler
        - handler: revenueBlock
          kind: substrate/BlockHandler
        - handler: mktPriceBlock
          kind: substrate/BlockHandler
